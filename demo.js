// Generated by CoffeeScript 1.10.0
(function() {
  var $, candidates, elem, error, error1, i, len, query, ref, w, want, word;

  $ = function(s) {
    if (s[0] === "#") {
      return document.getElementById(s.substring(1));
    } else if (s[0] === ".") {
      return document.getElementsByClassName(s.substring(1));
    } else {
      return document.getElementsByTagName(s);
    }
  };

  window.random = function() {
    location.hash = "";
    return location.reload();
  };

  window.conjugate = function() {
    location.hash = $('#query').value;
    location.reload();
    return false;
  };

  word = words[Math.floor(Math.random(words.length) * words.length)];

  if (location.hash !== "") {
    query = location.hash.slice(1);
    $('#query').value = query;
    candidates = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = words.length; i < len; i++) {
        w = words[i];
        if (w.plain() === query || w.reading() === query) {
          results.push(w);
        }
      }
      return results;
    })();
    if (candidates.length > 0) {
      word = candidates[0];
    } else {
      word = classify(query, query, "n/a");
    }
  }

  ref = $('.replace');
  for (i = 0, len = ref.length; i < len; i++) {
    elem = ref[i];
    try {
      want = elem.innerHTML;
      elem.innerHTML = word.conjugate(want);
    } catch (error1) {
      error = error1;
      elem.innerHTML = "";
    }
  }

}).call(this);
